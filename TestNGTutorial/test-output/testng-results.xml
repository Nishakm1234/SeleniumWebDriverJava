<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="1" total="14" passed="12" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-08-03T10:16:10 IST" name="LoanDepartment" finished-at="2022-08-03T10:16:10 IST" duration-ms="255">
    <groups>
      <group name="Smoke">
        <method signature="DemoProgram.demo()[pri:0, instance:test.DemoProgram@4e096385]" name="demo" class="test.DemoProgram"/>
        <method signature="DemoProgram3.MobileLogInCarLoan()[pri:0, instance:test.DemoProgram3@48f278eb]" name="MobileLogInCarLoan" class="test.DemoProgram3"/>
        <method signature="DemoProgram4.MobileLogInHomeLoan()[pri:0, instance:test.DemoProgram4@f5acb9d]" name="MobileLogInHomeLoan" class="test.DemoProgram4"/>
      </group> <!-- Smoke -->
    </groups>
    <test started-at="2022-08-03T10:16:10 IST" name="CarLoan" finished-at="2022-08-03T10:16:10 IST" duration-ms="94">
      <class name="test.DemoProgram3">
        <test-method is-config="true" signature="BfClass()[pri:0, instance:test.DemoProgram3@48f278eb]" started-at="2022-08-03T10:16:10 IST" name="BfClass" finished-at="2022-08-03T10:16:10 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BfClass -->
        <test-method is-config="true" signature="BfMethod()[pri:0, instance:test.DemoProgram3@48f278eb]" started-at="2022-08-03T10:16:10 IST" name="BfMethod" finished-at="2022-08-03T10:16:10 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BfMethod -->
        <test-method signature="MobileSignOutCarLoan(java.lang.String,java.lang.String)[pri:0, instance:test.DemoProgram3@48f278eb]" started-at="2022-08-03T10:16:10 IST" name="MobileSignOutCarLoan" data-provider="getData" finished-at="2022-08-03T10:16:10 IST" duration-ms="9" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firstSetUserName]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[firstpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileSignOutCarLoan -->
        <test-method is-config="true" signature="AfMethod()[pri:0, instance:test.DemoProgram3@48f278eb]" started-at="2022-08-03T10:16:10 IST" name="AfMethod" finished-at="2022-08-03T10:16:10 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfMethod -->
        <test-method is-config="true" signature="BfMethod()[pri:0, instance:test.DemoProgram3@48f278eb]" started-at="2022-08-03T10:16:10 IST" name="BfMethod" finished-at="2022-08-03T10:16:10 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BfMethod -->
        <test-method signature="MobileSignOutCarLoan(java.lang.String,java.lang.String)[pri:0, instance:test.DemoProgram3@48f278eb]" started-at="2022-08-03T10:16:10 IST" name="MobileSignOutCarLoan" data-provider="getData" finished-at="2022-08-03T10:16:10 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[secondSetUserName]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secondpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileSignOutCarLoan -->
        <test-method is-config="true" signature="AfMethod()[pri:0, instance:test.DemoProgram3@48f278eb]" started-at="2022-08-03T10:16:10 IST" name="AfMethod" finished-at="2022-08-03T10:16:10 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfMethod -->
        <test-method is-config="true" signature="BfMethod()[pri:0, instance:test.DemoProgram3@48f278eb]" started-at="2022-08-03T10:16:10 IST" name="BfMethod" finished-at="2022-08-03T10:16:10 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BfMethod -->
        <test-method signature="MobileSignOutCarLoan(java.lang.String,java.lang.String)[pri:0, instance:test.DemoProgram3@48f278eb]" started-at="2022-08-03T10:16:10 IST" name="MobileSignOutCarLoan" data-provider="getData" finished-at="2022-08-03T10:16:10 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[thirdSetUserName]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[thirdpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileSignOutCarLoan -->
        <test-method is-config="true" signature="AfMethod()[pri:0, instance:test.DemoProgram3@48f278eb]" started-at="2022-08-03T10:16:10 IST" name="AfMethod" finished-at="2022-08-03T10:16:10 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfMethod -->
        <test-method signature="WebLogInCarLoan(java.lang.String)[pri:0, instance:test.DemoProgram3@48f278eb]" started-at="2022-08-03T10:16:10 IST" name="WebLogInCarLoan" finished-at="2022-08-03T10:16:10 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[carLoan.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebLogInCarLoan -->
        <test-method is-config="true" signature="BfMethod()[pri:0, instance:test.DemoProgram3@48f278eb]" started-at="2022-08-03T10:16:10 IST" name="BfMethod" finished-at="2022-08-03T10:16:10 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BfMethod -->
        <test-method is-config="true" signature="AfMethod()[pri:0, instance:test.DemoProgram3@48f278eb]" started-at="2022-08-03T10:16:10 IST" name="AfMethod" finished-at="2022-08-03T10:16:10 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfMethod -->
        <test-method signature="MobileLogInCarLoan()[pri:0, instance:test.DemoProgram3@48f278eb]" started-at="2022-08-03T10:16:10 IST" name="MobileLogInCarLoan" finished-at="2022-08-03T10:16:10 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLogInCarLoan -->
        <test-method is-config="true" signature="BfMethod()[pri:0, instance:test.DemoProgram3@48f278eb]" started-at="2022-08-03T10:16:10 IST" name="BfMethod" finished-at="2022-08-03T10:16:10 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BfMethod -->
        <test-method is-config="true" signature="BfMethod()[pri:0, instance:test.DemoProgram3@48f278eb]" started-at="2022-08-03T10:16:10 IST" name="BfMethod" finished-at="2022-08-03T10:16:10 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BfMethod -->
        <test-method is-config="true" signature="AfMethod()[pri:0, instance:test.DemoProgram3@48f278eb]" started-at="2022-08-03T10:16:10 IST" name="AfMethod" finished-at="2022-08-03T10:16:10 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfMethod -->
        <test-method signature="MobileLogOutCarLoan()[pri:0, instance:test.DemoProgram3@48f278eb]" started-at="2022-08-03T10:16:10 IST" name="MobileLogOutCarLoan" finished-at="2022-08-03T10:16:10 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLogOutCarLoan -->
        <test-method is-config="true" signature="AfMethod()[pri:0, instance:test.DemoProgram3@48f278eb]" started-at="2022-08-03T10:16:10 IST" name="AfMethod" finished-at="2022-08-03T10:16:10 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfMethod -->
        <test-method is-config="true" signature="BfMethod()[pri:0, instance:test.DemoProgram3@48f278eb]" started-at="2022-08-03T10:16:10 IST" name="BfMethod" finished-at="2022-08-03T10:16:10 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BfMethod -->
        <test-method signature="APILogInCarLoan()[pri:0, instance:test.DemoProgram3@48f278eb]" started-at="2022-08-03T10:16:10 IST" name="APILogInCarLoan" finished-at="2022-08-03T10:16:10 IST" depends-on-methods="test.DemoProgram3.MobileSignOutCarLoan, test.DemoProgram3.WebLogInCarLoan" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- APILogInCarLoan -->
        <test-method is-config="true" signature="AfMethod()[pri:0, instance:test.DemoProgram3@48f278eb]" started-at="2022-08-03T10:16:10 IST" name="AfMethod" finished-at="2022-08-03T10:16:10 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfMethod -->
        <test-method is-config="true" signature="AfClass()[pri:0, instance:test.DemoProgram3@48f278eb]" started-at="2022-08-03T10:16:10 IST" name="AfClass" finished-at="2022-08-03T10:16:10 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfClass -->
      </class> <!-- test.DemoProgram3 -->
    </test> <!-- CarLoan -->
    <test started-at="2022-08-03T10:16:10 IST" name="PersonalLoan" finished-at="2022-08-03T10:16:10 IST" duration-ms="85">
      <class name="test.DemoProgram2">
        <test-method is-config="true" signature="Prerequesite()[pri:0, instance:test.DemoProgram2@306f16f3]" started-at="2022-08-03T10:16:10 IST" name="Prerequesite" finished-at="2022-08-03T10:16:10 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Prerequesite -->
        <test-method signature="PersonalLoan(java.lang.String)[pri:0, instance:test.DemoProgram2@306f16f3]" started-at="2022-08-03T10:16:10 IST" name="PersonalLoan" finished-at="2022-08-03T10:16:10 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[personalLoan.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PersonalLoan -->
      </class> <!-- test.DemoProgram2 -->
      <class name="test.DemoProgram">
        <test-method signature="demo()[pri:0, instance:test.DemoProgram@4e096385]" started-at="2022-08-03T10:16:10 IST" name="demo" finished-at="2022-08-03T10:16:10 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demo -->
        <test-method signature="secondClass()[pri:0, instance:test.DemoProgram@4e096385]" started-at="2022-08-03T10:16:10 IST" name="secondClass" finished-at="2022-08-03T10:16:10 IST" duration-ms="11" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at test.DemoProgram.secondClass(DemoProgram.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- secondClass -->
        <test-method is-config="true" signature="lastExecution()[pri:0, instance:test.DemoProgram@4e096385]" started-at="2022-08-03T10:16:10 IST" name="lastExecution" finished-at="2022-08-03T10:16:10 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lastExecution -->
      </class> <!-- test.DemoProgram -->
    </test> <!-- PersonalLoan -->
    <test started-at="2022-08-03T10:16:10 IST" name="HomeLoan" finished-at="2022-08-03T10:16:10 IST" duration-ms="8">
      <class name="test.DemoProgram4">
        <test-method signature="APILogInHomeLoan()[pri:0, instance:test.DemoProgram4@f5acb9d]" started-at="2022-08-03T10:16:10 IST" name="APILogInHomeLoan" finished-at="2022-08-03T10:16:10 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- APILogInHomeLoan -->
        <test-method signature="MobileLogInHomeLoan()[pri:0, instance:test.DemoProgram4@f5acb9d]" started-at="2022-08-03T10:16:10 IST" name="MobileLogInHomeLoan" finished-at="2022-08-03T10:16:10 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLogInHomeLoan -->
        <test-method signature="WebLogInHomeLoan()[pri:0, instance:test.DemoProgram4@f5acb9d]" started-at="2022-08-03T10:16:10 IST" name="WebLogInHomeLoan" finished-at="2022-08-03T10:16:10 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebLogInHomeLoan -->
      </class> <!-- test.DemoProgram4 -->
      <class name="test.DemoProgram3">
        <test-method is-config="true" signature="BfSuite()[pri:0, instance:test.DemoProgram3@48f278eb]" started-at="2022-08-03T10:16:09 IST" name="BfSuite" finished-at="2022-08-03T10:16:09 IST" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BfSuite -->
      </class> <!-- test.DemoProgram3 -->
      <class name="test.DemoProgram">
        <test-method is-config="true" signature="AfSuite()[pri:0, instance:test.DemoProgram@4e096385]" started-at="2022-08-03T10:16:10 IST" name="AfSuite" finished-at="2022-08-03T10:16:10 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfSuite -->
      </class> <!-- test.DemoProgram -->
    </test> <!-- HomeLoan -->
  </suite> <!-- LoanDepartment -->
</testng-results>
